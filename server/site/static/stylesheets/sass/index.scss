$motif-colour: rgb(255,205,80);
$error-colour: rgb(255,120,120);
$dark-lines: rgb(25,25,25);
$light-lines: rgb(28,28,28);
$light-panel: rgba(255,255,255,0.3);

@mixin filter($filters) {
    -webkit-filter: $filters;
	-moz-filter: $filters;
	-ms-filter: $filters;
	-o-filter: $filters;
	filter: $filters;
}
@mixin user-select($state) {
    -webkit-touch-callout: $state; /* iOS Safari */
    -webkit-user-select: $state; /* Safari */
    -khtml-user-select: $state; /* Konqueror HTML */
    -moz-user-select: $state; /* Firefox */
    -ms-user-select: $state; /* Internet Explorer/Edge */
    user-select: $state; /* Non-prefixed version, currently supported by Chrome and Opera */
}
@mixin user-drag($state) {
	-webkit-user-drag: $state;
	-khtml-user-drag: $state;
	-moz-user-drag: $state;
	-o-user-drag: $state;
	user-drag: $state;
}

@mixin user-drag($state) {
	-webkit-transition: $state;
	-moz-transition: $state;
	-ms-transition: $state;
	-o-transition: $state;
	transition: $state;
}
 
@import 'reset';
@import 'header';
@import 'footer';
@import 'body';

@font-face {
font-family: Code;
src: url("../assets/fonts/Code-light.otf") format("opentype");
}
@font-face {
font-family: Code;
font-weight: bold;
src: url("../assets/fonts/Code-bold.otf") format("opentype");
}
@font-face {
font-family: Stellar;
src: url("../assets/fonts/Stellar-light.otf") format("opentype");
}
@font-face {
font-family: Gravity;
src: url("../assets/fonts/Gravity-book.otf") format("opentype");
}
@font-face {
font-family: Lighthouse;
src: url("../assets/fonts/Lighthouse.ttf") format("truetype");
}
@font-face {
font-family: Futura;
src: url("../assets/fonts/Futura-oblique.ttf") format("truetype");
}
@font-face {
font-family: Futura;
font-weight:bold;
src: url("../assets/fonts/Futura-koyu.ttf") format("truetype");
}
@font-face {
font-family: FontAwesome;
src: url("../assets/fonts/FontAwesome-Webfont.ttf") format("truetype");
}
@font-face {
font-family: FrontPageSupplement;
src: url("../assets/fonts/Front-Page-Supplement.otf") format("opentype");
}

body {
    
}

a {
    cursor: pointer;
	font-style: italic;
	text-decoration: none;
	color: inherit;
	transition: color 150ms linear;
}

a:hover {
	color: lighten(desaturate($motif-colour, 2%),10%);
}

.centered {
    position:absolute;
    top:50%;
    left:50%;
    transform:translate(-50%,-50%);
}
.snapScroll {
    -webkit-scroll-snap-points-y: repeat(100vh);
    -ms-scroll-snap-points-y: repeat(100vh);
    scroll-snap-points-y: repeat(100vh);
    -webkit-scroll-snap-type: mandatory;
    -ms-scroll-snap-type: mandatory;
    scroll-snap-type: mandatory;
    -webkit-scroll-snap-destination: 100% 0%;
    -ms-scroll-snap-destination: 100% 0%;
    scroll-snap-destination: 100% 0%;
}

.button {
    font-family:Gravity;
    color: inherit;
    font-style: normal;
    text-decoration: none;
    cursor: pointer;
    -webkit-touch-callout: none;
    -webkit-user-select: none; 
    -khtml-user-select: none;
    -moz-user-select: none; 
    -ms-user-select: none; 
    user-select: none;
}

.buttonA {
    @extend .button;
    background: none;
    border:1px solid;
    border-radius: 100vh;
    transition: all 220ms ease-in-out;
    margin: 10px;
    padding: 5px 10px 5px 10px;
}
.buttonA:hover {
    background-color:rgba(0,0,0,0.8);
    color: white !important;
    border-color: transparent !important;
}

.inputA {
    padding:10px;
    background: none;
    border:1px solid;
    border-radius: 100vh;
    transition: all 220ms ease-in-out;
    margin: 0px 12px 0px 12px;
    padding: 5px 10px 5px 10px;
    color: rgb(100,100,100);
    border-color: rgb(100,100,100);
    border-width: 1px;
    background: none;
    text-align: center;
}
.inputA:hover {
    border-color: white;
}
.inputA:focus {
    outline-width: 0;
    background-color: white;
    color:black;
    border-color:black;
}
.inputA:focus::-webkit-input-placeholder {
    color: rgb(10,10,10);
}

.circleOpacityPulse {
    animation: pulseOpacity 50ms 1 forwards;
}

.pulseRedAnim {
	animation: pulseRedError 1800ms 1 forwards;
	animation-timing-function: ease-in-out;
}

.iconExitAnim {
    animation: iconExit 1.5s 1 forwards;
	animation-timing-function: ease-in;
}


@keyframes iconExit {
    from {stroke-width: 1.55;}
    12% {stroke-width: 1.7;stroke:lighten($motif-colour,10%);}
	70% {opacity:1;}
    to {stroke-width: 0; opacity:0.5;}
}

@keyframes pulseRedError {
    from {stroke: rgb(255,255,255);stroke-dasharray:'0,5';stroke-dashoffset:0}
	50% {stroke-dasharray:'1,5';stroke: $error-colour;stroke-dashoffset:180}
    to {stroke: rgb(255,255,255); stroke-dasharray:'0,5';stroke-dashoffset:360}
}

@keyframes pulseOpacity {
    from {opacity: 0;}
    50% {opacity: 1;}
    to {opacity: 0;}
}

@keyframes rainbowColor {
    from {color: red;}
    14% {color: orange;}
    29% {color: yellow;}
    43% {color: green;}
    57% {color: blue;}
    71% {color: indigo;}
    85% {color: violet;}
    to {color: red;}
}

@keyframes pulseSize {
    from {transform:scale(1);}
    50% {transform:scale(1.05);}
    to {transform:scale(1);}

}

@keyframes loadingSpin {
    from {transform: rotate(0deg);}
    9.9% {transform: rotate(30deg);}
    18.2% {transform: rotate(60deg);}
    27.3% {transform: rotate(90deg);}
    36.4% {transform: rotate(120deg);}
    45.5% {transform: rotate(150deg);}
    54.5% {transform: rotate(180deg);}
    63.6% {transform: rotate(210deg);}
    72.7% {transform: rotate(240deg);}
    81.8% {transform: rotate(270deg);}
    90.9% {transform: rotate(300deg);}
    to {transform: rotate(330deg);}
}
